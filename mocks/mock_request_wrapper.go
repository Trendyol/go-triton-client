// Code generated by MockGen. DO NOT EDIT.
// Source: base/request_wrapper.go
//
// Generated by this command:
//
//	mockgen -source=base/request_wrapper.go -destination=mocks/mock_request_wrapper.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRequestWrapper is a mock of RequestWrapper interface.
type MockRequestWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockRequestWrapperMockRecorder
	isgomock struct{}
}

// MockRequestWrapperMockRecorder is the mock recorder for MockRequestWrapper.
type MockRequestWrapperMockRecorder struct {
	mock *MockRequestWrapper
}

// NewMockRequestWrapper creates a new mock instance.
func NewMockRequestWrapper(ctrl *gomock.Controller) *MockRequestWrapper {
	mock := &MockRequestWrapper{ctrl: ctrl}
	mock.recorder = &MockRequestWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestWrapper) EXPECT() *MockRequestWrapperMockRecorder {
	return m.recorder
}

// PrepareRequest mocks base method.
func (m *MockRequestWrapper) PrepareRequest() (any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareRequest")
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareRequest indicates an expected call of PrepareRequest.
func (mr *MockRequestWrapperMockRecorder) PrepareRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareRequest", reflect.TypeOf((*MockRequestWrapper)(nil).PrepareRequest))
}
