// Code generated by MockGen. DO NOT EDIT.
// Source: base/marshaller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMarshaller is a mock of Marshaller interface.
type MockMarshaller struct {
	ctrl     *gomock.Controller
	recorder *MockMarshallerMockRecorder
}

// MockMarshallerMockRecorder is the mock recorder for MockMarshaller.
type MockMarshallerMockRecorder struct {
	mock *MockMarshaller
}

// NewMockMarshaller creates a new mock instance.
func NewMockMarshaller(ctrl *gomock.Controller) *MockMarshaller {
	mock := &MockMarshaller{ctrl: ctrl}
	mock.recorder = &MockMarshallerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMarshaller) EXPECT() *MockMarshallerMockRecorder {
	return m.recorder
}

// Marshal mocks base method.
func (m *MockMarshaller) Marshal(v interface{}) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Marshal", v)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Marshal indicates an expected call of Marshal.
func (mr *MockMarshallerMockRecorder) Marshal(v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Marshal", reflect.TypeOf((*MockMarshaller)(nil).Marshal), v)
}
